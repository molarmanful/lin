gi (//
    unshift(
      ids[x=shift()]||(
        line=lines.find(a=>(a.match`^ *#([^\d. ])`||[])[1]==x),
        line&&(ids[x]=unesc(line.replace(/^ *#[^\d. ]/,'')))
      )
    )
  )
gs unshift(form())
si ids[shift()]=shift()

out process.stdout.write(''+shift())

e unshift(Math.E)
pi unshift(Math.PI)

E ($.swap(),unshift(shift()*Math.pow(10,shift())))
_ unshift(-shift())
+ unshift(shift()- -shift())
- ($.swap(),unshift(shift()-shift()))
* unshift(shift()*shift())
/ ($.swap(),unshift(shift()/shift()))
// ($.swap(),unshift(Math.floor(shift()/shift())))
% ($.swap(),unshift(mod(shift(),shift())))
/% ($.over(),$.over(),$['//'](),$.rot_(),$['%']())
^ ($.swap(),unshift(Math.pow(shift(),shift())))

abs unshift(Math.abs(shift()))
sign unshift(Math.sign(shift()))
rand unshift(Math.random(shift()))
ln unshift(Math.log(shift()))
log unshift(Math.log10(shift()))
sin unshift(Math.sin(shift()))
cos unshift(Math.cos(shift()))
tan unshift(Math.tan(shift()))
sinh unshift(Math.sinh(shift()))
cosh unshift(Math.cosh(shift()))
tanh unshift(Math.tanh(shift()))
asin unshift(Math.asin(shift()))
acos unshift(Math.acos(shift()))
atan unshift(Math.atan(shift()))
asinh unshift(Math.asinh(shift()))
acosh unshift(Math.acosh(shift()))
atanh unshift(Math.atanh(shift()))
max unshift(Math.max(...stack[st]))
min unshift(Math.min(...stack[st]))

~ unshift(~shift())
& ($.swap(),unshift(shift()&shift()))
| ($.swap(),unshift(shift()|shift()))
$ ($.swap(),unshift(shift()^shift()))

floor unshift(Math.floor(shift()))
trunc unshift(Math.trunc(shift()))
round unshift(Math.round(shift()))
ceil unshift(Math.ceil(shift()))

pick unshift(get(shift()))
nix splice(shift())
roll (x=get(0),$.pick(),unshift(x+1),$.nix())
roll_ splice(shift(),0,shift())
dup unshift(stack[st][0])
drop shift()
rot unshift(splice(2,1)[0])
rot_ ($.rot(),$.rot())
swap ($.dup(),$.rot_(),$.drop())
nip ($.swap(),$.drop())
tuck ($.dup(),$.rot_())
over ($.swap(),$.tuck())
clr stack[st]=[]
rev stack[st].reverse()
len unshift(stack[st].length)

stack stack[st=shift()]||(stack[st]=[])
sdup unshift(stack[shift()].shift())

el (ln.unshift(shift()),lne())
en (ln[0].big||ln.unshift(ln[0]+1),lne())
ep (ln[0].big||ln.unshift(ln[0]-1),lne())
ei (//
    exec(
      ids[x=shift()]||(
        line=lines.find(a=>(a.match`^ *#([^\d. ])`||[])[1]==x),
        line&&(ids[x]=line.replace(/^ *#[^\d. ]/,''))
      )
    )
  )
es (ln.unshift(''),exec(shift()))
e& ($.swap(),shift()?$.ei():shift())
e| ($.swap(),shift()?shift():$.ei())
