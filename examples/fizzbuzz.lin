100 .> 1+ \;.'
  .+ [3 5] % ! "Fizz""Buzz",.~ repl <cs.+ \pop e| outln



# EXPLANATION

Outputs numbers from 1 to 100, replacing:

- numbers divisible by 3 with Fizz.
- numbers divisible by 5 with Buzz.
- numbers divisible by both 3 and 5 with FizzBuzz.

    100 .> 1+ \;.'

For each number from 1 to 100...

    .+ [3 5] % ! "Fizz""Buzz",.~ repl

Pushes "Fizz" on multiples of 3 and "Buzz" on multiples of 5.

    <cs

Joins the top of the stack to get either "Fizz," "Buzz," "FizzBuzz," or an empty string.

    .+ \pop e|

Pops the top item if it is an empty string.

    outln

Outputs the top item.