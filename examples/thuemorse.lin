0 ( ( rev ( N dup ! ++ ) map ) ' () join dup outln ) \n: out in e*



# EXPLANATION

Outputs the Thue-Morse sequence.

- `0` is the initial condition.
- `(...) \n: out in e*` executes the given lambda (input) times and outputs the result.
- `( rev (...) map ) ' () join dup outln` executes the lambda on each digit in the number at the top of the stack, joins the result, and outputs it.
- `0+ dup ! ++` turns 0 into 01 and 1 into 10.
