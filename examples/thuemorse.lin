0 ( \clr dip () split ( 0+ dup ! ++ ) map () join ) \ ++ 10repeat es out



# EXPLANATION
Outputs the Thue-Morse sequence.

- `0` is the initial condition.
- `(...) \ ++ 10repeat es out` repeats the lambda as a string 10 times, executes the resulting string, and outputs the result.

Within the lambda:

- `\clr dip` clears the stack but preserves the top item.
- `() split (...) map () join` splits the top item, executes the lambda on each item in the stack, and joins the resulting stack.

Within the lambda:

- `0+ dup ! ++` essentially turns 0 into 01 and 1 into 10.
