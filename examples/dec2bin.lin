\BIN ::: 2594 BIN out
#BIN ( 2/% swap dup ) () ew drop rev () join



# EXPLANATION
Converts decimal to binary.

- `\BIN :::` pushes the ID of BIN to the global scope. This is a pretty standard way of declaring functions.
- `2594 BIN out` pushes a decimal number, executes BIN on the current stack, and outputs the result.

In the declaration of BIN:

- `(...) () ew` is a makeshift way of creating a do-while loop.

Within the lambda:

- `2/%` performs both division and modulus on the top 2 items on the stack.
- `swap dup` exposes the quotient (second from top of stack) as the while loop's condition. The loop stops if this condition is 0.

Back to declaration of BIN:

- `drop rev () join` drops the leftover quotient, reverses the entire stack, and joins the stack.
