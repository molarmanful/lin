[ g; out in \dup ( 2/%.~ ) ew pop rev ] <cs outln
Enter a decimal number: 



# EXPLANATION

Converts decimal to binary.

- `.IN out in` prompts the user for a decimal number.
- `\dup (...) ew` executes the lambda while the top of the stack is nonzero.
- `2/%.~` performs both division and modulus on the top 2 items on the stack, keeping the quotient on top.
- `[ ... pop rev ] <cs outln` drops the leftover quotient, reverses the stack, joins it, and outputs the result.