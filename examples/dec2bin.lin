[ .IN out in \dup ( 2/% swap ) ew pop rev ] <cs outln

#INEnter a decimal number: 



# EXPLANATION

Converts decimal to binary.

- `.IN out in` prompts the user for a decimal number.
- `(...) \dup ew` executes the lambda while the top of the stack is nonzero.
- `2/% swap` performs both division and modulus on the top 2 items on the stack, keeping the quotient on top.
- `[ ... pop rev ] enclose <ws outln` drops the leftover quotient, reverses the stack, joins it, and outputs the result.